
[global]
	font = Monospace 8

	# Allow a small subset of html markup:
	# <b>bold</b>
	# <i>italic</i>
	# <s>strikethrough</s>
	# <u>underline</u>
	#
	# For a complete reference, see http://developer.gnome.org/pango/stable/PangoMarkupFormat.html
	# If markup is not allowed, these tags will be stripped out of the message:
	allow_markup = yes

	# The format of the message; possible variables are:
	#   %a  appname
	#   %s  summary
	#   %b  body
	#   %i  iconname (including its path)
	#   %p  progress value if set ([  0%] to [100%]) or nothing
	# Markup is allowed:
	format = "<b>%i%a</b>\n%s\n%b"

	# Sort messages by urgency:
	sort = yes

	# Show how many messages are currently hidden (because of geometry):
	indicate_hidden = yes

	# Alignment of message text:
	# Possible values are "left", "center", and "right"
	alignment = left

	# The frequency with which text that is longer than the notification
	# window allows bounces back and forth:
	# This option conflicts with 'word_wrap'
	# Set to 0 to disable
	bounce_freq = 0

	# Show age of message if message is older than show_age_threshold seconds:
	# Set to -1 to disable
	show_age_threshold = 60

	# Split notifications into multiple lines if they don't fit into geometry
	word_wrap = yes

	# Ignore newlines '\n' in notifications
	ignore_newline = no

	# The geometry of the window
	# geometry [{width}]x[{height}][+/-{x}+/-{y}]
	# The geometry of the message window
	# The height is measured in number of notifications, everything else in pixels; If the width
	# is omitted but the height is given ("-geometry x2"), the message window expands over
	# the whole screen (dmenu-like); if the width is 0, the window expands to the longest
	# message displayed; a positive is measured from the left, a negative from the right side
	# of the screen; Y is measured from the top and down respectively; the width can be negative;
	# in this case the actual width is the screen width minus the width defined within the
	# geometry option
	geometry = "300x10-30+20"

	# The transparency of the window
	# Range: [0; 100]
	transparency = 40

	# Don't remove messages if the user is idle (no mouse or keyboard input) for
	# longer than idle_threshold seconds:
	idle_threshold = 120

	# The monitor notifications will be displayed on:
	monitor = 0

	# Display notifications on focused monitor; possible modes are:
	# mouse: follow the mouse pointer
	# keyboard: follow window with keyboard focus
	# none: don't follow anything
	#
	# "keyboard" needs a windowmanager that exports the _NET_ACTIVE_WINDOW property
	# This should be the case for almost all modern windowmanagers
	#
	# If this option is set to mouse or keyboard, the monitor option will be ignored:
	follow = keyboard

	# If a notification is sticky, don't timeout as usual:
	sticky_history = yes

	# The height of a single line
	# If the height is smaller than the font height, it will get raised to the font height
	# This adds empty space above and under the text:
	line_height = 0

	# Draw a line of 'separator_height' pixels between two notifications
	# Set to 0 to disable:
	separator_height = 2

	# Padding between text and separator:
	padding = 8

	# Define a color for the separator
	# Possible values are:
	# auto:		dunst tries to find a color fitting to the background
	# foreground:	use the same color as the foreground
	# frame:	use the same color as the frame
	# anything else will be interpreted as an X color:
	separator_color = frame

	# Print a notification on startup
	# This is mainly for error detection, since dbus (re-)starts dunst
	# automatically after a crash:
	startup_notification = true

	# dmenu path:
	dmenu = /usr/bin/dmenu -p dunst:

	# Browser for opening urls in context menu:
	browser = /usr/bin/firefox -new-tab

[frame]
	width = 0
	color = "#000000"

[shortcuts]
	# Shortcuts are specified as [modifier+][modifier+]...key
	# Avaliable modifiers are 'ctrl', 'mod1' (the alt key), 'mod2', 'mod3',
	# and 'mod4' (windows key)
	# xev might be helpful to find names for keys

	# Close notification
	close = mod4+m

	# Close all notifications
	close_all = mod4+shift+m

	# Redisplay last message(s)
	history = mod4+n

	# Context menu
	context = mod4+shift+i

[urgency_low]
	# IMPORTANT: Colors have to be defined in quotation marks.
	# Otherwise, the '#' and following would be interpreted as a comment
	background = "#222222"
	foreground = "#888888"
	timeout = 10

[urgency_normal]
	background = "#285577"
	foreground = "#ffffff"
	timeout = 10

[urgency_critical]
	background = "#900000"
	foreground = "#ffffff"
	timeout = 0

# Every section that isn't one of the above is interpreted as a rule
# to override settings for certain messages.
# Messages can be matched by 'appname', 'summary', 'body', or 'icon'
# and you can override the 'timeout', 'urgency', 'foreground', 'background',
# and 'format'.
# Shell-like globbing will get expanded.
#
# NOTE: If you don't want a notification to be displayed, set the format to "".
# NOTE: It might be helpful to run `dunst -print` in a terminal in order to find
# fitting options for rules.
